{"mappings":"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","sources":["XP/Maze-Generator/Game.js"],"sourcesContent":["let maze = document.querySelector(\".maze\")\nlet ctx = maze.getContext(\"2d\")\nlet current;\nmaze.width = 500;\nmaze.height = 500;\n\nclass Maze {\n    constructor(size, rows, columns){\n        this.size = size;\n        this.rows = rows;\n        this.columns = columns;\n        this.grid = [];\n        this.stack = []; \n    }\n    setup(){\n        for(let r = 0; r < this.rows; r++){\n            let row = [];\n            for(let c = 0; c < this.columns; c++){\n                let cell = new Cell(r, c, this.grid, this.size);\n                row.push(cell);\n            }\n            this.grid.push(row)\n        }\n        current = this.grid[0][0];\n    }\n\n    draw(){\n        maze.width = this.size;\n        maze.hight = this.size;\n        maze.style.background = 'black'\n        current.visited = true\n\n        for (let r = 0; r < this.rows; r++){\n            for (let c = 0; c < this.columns; c++){\n                let grid = this.grid;\n                grid[r][c].show(this.size, this.rows, this.columns);\n            }\n        }\n        let next = current.checkNeighbours();\n        if (next) {\n            next.visited = true;\n\n            this.stack.push(current);\n\n            current.highlight(this.columns);\n\n            current.removeWalls(current, next);\n\n            current = next;\n        }else if (this.stack.length > 0){\n            let cell = this.stack.pop();        \n            current = cell;\n            current.highlight(this.columns);\n        }\n\n        if (this.stack.length == 0) {\n            return;\n        }\n        window.requestAnimationFrame(()=>{\n            this.draw();\n        })\n    }\n\n} \n\nclass Cell{\n    constructor(rowNum, colNum, parentGrid, parentSize){\n        this.rowNum = rowNum;\n        this.colNum = colNum;\n        this.parentGrid = parentGrid;\n        this.parentSize = parentSize;\n        this.visited = false\n        this.walls = {\n            topWall:true,\n            rightWall:true,\n            bottomWall: true,\n            leftWall: true,\n        };\n    }\n    checkNeighbours(){\n        let grid = this.parentGrid;\n        let row = this.rowNum;\n        let col = this.colNum;\n        let neighbours = [];\n\n        let top = row !== 0 ? grid[row- 1][col] : undefined;\n        let right = row !== grid.length - 1 ? grid[row][col + 1] : undefined;\n        let bottom = row !== grid.length -1 ? grid[row + 1][col] : undefined;\n        let left = row !== grid.length -0 ? grid[row][col - 1] : undefined;\n        if(top && !top.visited) neighbours.push(top);\n        if(right && !right.visited) neighbours.push(right);\n        if(bottom && !bottom.visited) neighbours.push(bottom);\n        if(left && !left.visited) neighbours.push(left);\n        if (neighbours.length !== 0){\n            let random = Math.floor(Math.random() * neighbours.length);\n            return neighbours[random];\n        }else{\n            return undefined;\n        }\n    }\n    drawTopWall(x, y, size, columns, rows) {\n        ctx.beginPath()\n        ctx.moveTo(x, y);\n        ctx.lineTo(x+size/columns, y) \n        ctx.stroke();\n    }\n    highlight(columns){\n        let x = (this.colNum * this.parentSize) / columns + 1;\n        let y = (this.rowNum * this.parentSize) / columns + 1;\n\n        ctx.fillStyle = 'aqua'\n        ctx.fillRect(\n            x,\n            y, \n            this.parentSize /columns -3, \n            this.parentSize / columns-3)\n    }\n\n    drawRightWall(x, y, size, columns, rows) {\n        ctx.beginPath()\n        ctx.moveTo(x + size / columns, y);\n        ctx.lineTo(x + size / columns, y + size / rows) \n        ctx.stroke();\n    }\n\n    drawBottomWall(x, y, size, columns, rows) {\n        ctx.beginPath()\n        ctx.moveTo(x, y + size/rows);\n        ctx.lineTo(x + size / columns, y + size / rows) \n        ctx.stroke();\n    }\n    drawLeftWall(x, y, size, columns, rows) {\n        ctx.beginPath()\n        ctx.moveTo(x, y);\n        ctx.lineTo(x, y + size / rows) \n        ctx.stroke();\n    }\n    \n    removeWalls(cell1, cell2) {\n        let x = (cell1.colNum - cell2.colNum);\n\n        if (x == 1){\n            cell1.walls.leftWall = false;\n            cell2.walls.rightWall = false;\n        }else if (x == -1){\n            cell1.walls.rightWall = false;\n            cell2.walls.leftWall = false;\n        }\n        let y = cell1.rowNum - cell2.rowNum;\n\n        if (y == 1){\n            cell1.walls.topWall = false;\n            cell2.walls.bottomWall = false;\n        }else if (y == -1){\n            cell1.walls.bottomWall = false;\n            cell2.walls.topWall = false;\n        }\n\n        \n    }\n\n    show(size, rows, columns){\n        let x = (this.colNum * size) / columns;\n        let y = (this.rowNum * size) / rows;\n        ctx.strokeStyle = 'white';\n        ctx.fillStyle = 'black';\n        ctx.lineWidith = 2;\n\n        if (this.walls.topWall) this.drawTopWall(x, y, size, columns, rows);\n        if (this.walls.rightWall) this.drawRightWall(x, y, size, columns, rows);\n        if (this.walls.bottomWall) this.drawBottomWall(x, y, size, columns, rows);\n        if (this.walls.leftWall) this.drawLeftWall(x, y, size, columns, rows);\n        if (this.visited) {\n            ctx.fillRect(x+1, y+1, size/columns - 2, size/rows - 2);\n        }\n\n    }\n}\nlet newMaze = new Maze(500, 10, 10);\nnewMaze.setup();\nnewMaze.draw();\n\ndocument.addEventListener('keydown', function(event) {\n    if(event.keyCode == 37) {\n        alert('Left was pressed');\n    }\n    else if(event.keyCode == 39) {\n        alert('Right was pressed');\n    }\n});\n"],"names":[],"version":3,"file":"index.89087c94.js.map","sourceRoot":"/__parcel_source_root/"}